(declare-fun main@%_2_0 () (_ BitVec 64))
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_21_0 () (_ BitVec 64))
(declare-fun main@%_3_0 () (_ BitVec 64))
(declare-fun sea.sp0_0 () (_ BitVec 64))

(assert (let ((a!1 (= (ite (or (= main@%_21_0 #x0000000000000000) main@%_24_0)
                   #x0000000000000000
                   (bvadd #xffffffffffffdfe0 sea.sp0_0))
              #x0000000000000000)))
(let ((a!2 (not (= (ite (= main@%_21_0 #x0000000000000000)
                        main@%_21_0
                        (ite a!1 #x0000000000000000 main@%_21_0))
                   main@%_21_0)))
      (a!3 (and (bvule main@%_2_0 main@%_3_0)
                (not (bvule #x000000000000000b main@%_3_0))
                (or (= main@%_21_0 #x0000000000000000) (not a!1)))))
(let ((a!4 (ite (= (ite (= main@%_21_0 #x0000000000000000)
                        #x0000000008048010
                        (ite a!1 #x0000000000000000 #x0000000008048010))
                   #x0000000008048010)
                (and (bvule main@%_2_0 main@%_3_0)
                     (not (bvule #x000000000000000b main@%_3_0))
                     (or (= main@%_21_0 #x0000000000000000) (not a!1))
                     a!2)
                a!3)))
(let ((a!5 (ite (= (ite (= main@%_21_0 #x0000000000000000)
                        main@%_21_0
                        (ite a!1 #x0000000000000000 main@%_21_0))
                   #x0000000000000000)
                (ite a!1 a!4 a!3)
                (ite a!1 a!3 a!4))))
  (and (= #b000 ((_ extract 2 0) sea.sp0_0))
       (bvule sea.sp0_0 #x00000000c0000000)
       (bvuge sea.sp0_0 #x00000000bf700000)
       (bvule main@%_3_0 #x0000000000001000)
       (bvule main@%_21_0 #x0000000000001000)
       a!5))))))
(check-sat)
